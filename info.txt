run thrylos: go build -o bin/thrylos ./cmd/thrylos && ./bin/thrylos

# Start node 1 with API server on port 8080
go build -o bin/thrylos ./cmd/thrylos && ./bin/thrylos --node=1 --api-port=8080

# Or disable API server
go build -o bin/thrylos ./cmd/thrylos && ./bin/thrylos --node=1 --api=false

TO DO 

ðŸŽ¯ Next Steps for Production:
Consensus.proto - Use for the consensus
Make sure the database is used correctly 

.THR - Wallet usernames
Multi-node Testing - Start multiple nodes with different ports
Wallet Integration - External wallets can submit transactions
.env.dev & .env.prod - need to be created or not? 
Ask Claude to act as an Audit person to audit the blockchain for vulnabilities 


Key Design Decisions Explained
1. Account-Based State 

Single source of truth - WorldState map
Simple balance tracking - no UTXO complexity
Efficient queries - O(1) account lookups
Easy debugging - clear state representation


Clean interfaces - easy to test and mock
Separation of concerns - each package has single responsibility
Extensible - easy to add smart contracts later
Maintainable - clear code organization

4. Modern Patterns

Context-based - proper Go patterns
Interface-driven - dependency injection ready
Concurrent-safe - proper mutex usage
Event-driven - pubsub for loose coupling